/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.3 */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Node {
    int32_t id;
    int32_t battery_mv;
    int32_t software_version;
} Node;

typedef struct _Sensor {
    int32_t temperature;
    int32_t humidity;
    int32_t light;
    int32_t id;
} Sensor;

typedef struct _State {
    bool has_node;
    Node node;
    pb_callback_t sensor;
} State;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define State_init_default                       {false, Node_init_default, {{NULL}, NULL}}
#define Node_init_default                        {0, 0, 0}
#define Sensor_init_default                      {0, 0, 0, 0}
#define State_init_zero                          {false, Node_init_zero, {{NULL}, NULL}}
#define Node_init_zero                           {0, 0, 0}
#define Sensor_init_zero                         {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Node_id_tag                              1
#define Node_battery_mv_tag                      2
#define Node_software_version_tag                3
#define Sensor_temperature_tag                   1
#define Sensor_humidity_tag                      2
#define Sensor_light_tag                         3
#define Sensor_id_tag                            4
#define State_node_tag                           1
#define State_sensor_tag                         2

/* Struct field encoding specification for nanopb */
#define State_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  node,              1) \
X(a, CALLBACK, REPEATED, MESSAGE,  sensor,            2)
#define State_CALLBACK pb_default_field_callback
#define State_DEFAULT NULL
#define State_node_MSGTYPE Node
#define State_sensor_MSGTYPE Sensor

#define Node_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   SINGULAR, INT32,    battery_mv,        2) \
X(a, STATIC,   SINGULAR, INT32,    software_version,   3)
#define Node_CALLBACK NULL
#define Node_DEFAULT NULL

#define Sensor_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    temperature,       1) \
X(a, STATIC,   SINGULAR, INT32,    humidity,          2) \
X(a, STATIC,   SINGULAR, INT32,    light,             3) \
X(a, STATIC,   SINGULAR, INT32,    id,                4)
#define Sensor_CALLBACK NULL
#define Sensor_DEFAULT NULL

extern const pb_msgdesc_t State_msg;
extern const pb_msgdesc_t Node_msg;
extern const pb_msgdesc_t Sensor_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define State_fields &State_msg
#define Node_fields &Node_msg
#define Sensor_fields &Sensor_msg

/* Maximum encoded size of messages (where known) */
/* State_size depends on runtime parameters */
#define Node_size                                33
#define Sensor_size                              44

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
